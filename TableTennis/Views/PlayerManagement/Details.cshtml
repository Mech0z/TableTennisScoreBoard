@using TableTennis.HelperClasses
@using TableTennis.Models
@model TableTennis.ViewModels.PlayerDetailsViewModel

@{
    ViewBag.Title = @Model.Player.Username;
}

<h2>Player details</h2>

<fieldset>
    <div class="display-label">
        @Html.DisplayNameFor(model => model.Player.Username)
    </div> 
    <div class="display-field">
        @Html.DisplayFor(model => model.Player.Username)
    </div>

    <div class="display-label">
        @Html.DisplayNameFor(model => model.Player.Email)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Player.Email)
    </div>

@*    <div class="display-label">
        @Html.DisplayNameFor(model => model.Player.Ratings[Game.SingleTableTennis])
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Player.Ratings[Game.SingleTableTennis])
    </div>*@

    <div class="display-field">
        <img src="@Html.Gravatar(Model.Player.GravatarEmail)" width="64" height="64" alt="Users Gravatar"/>
    </div>
</fieldset>

<h2>Last 10 games</h2>

<table>
    <tr>
        <td>
            Time
        </td>
        <td>
            Opponent
        </td>
        <td>
            Rating
        </td>
    </tr>
    @foreach (var game in Model.PlayedGamesViewModel.GameList)
    {
        
    @game.TimeStamp
    <br/>
    switch (game.Game)
    {
        case Game.SingleTableTennis:
            @Html.Label("Single Table Tennis")
            <b>
                @game.Players[0] - @game.Players[1]
            </b>
            break;
        case Game.DoubleTableTennis:
            @Html.Label("Double Table Tennis")
            <b>
                @game.Players[0] & @game.Players[1] vs @game.Players[2] & @game.Players[3]
            </b>
            break;
        case Game.SingleFoosball:
            @Html.Label("Single Foosball")
            <b>
                @game.Players[0] - @game.Players[1]
            </b>
            break;
        case Game.DoubleFoosball:
            @Html.Label("Double Foosball")
            <b>
                @game.Players[0] & @game.Players[1] vs @game.Players[2] & @game.Players[3]
            </b>
            break;
    }
    <br/>
    foreach (GameSet set in game.GameSets)
    {
        <b>
            @set.Score1 - @set.Score2
        </b>
        <br/>
    }
    <br/>
    }
</table>

<p>
    @Html.ActionLink("Back to List", "PlayerList")
</p>